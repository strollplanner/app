name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  java_version: '12.x'
  flutter_version: '1.22.3'
  flutter_path: /opt/hostedtoolcache/flutter
  gradle_path: |
    ~/.gradle/caches
    ~/.gradle/wrapper

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha8::$(git rev-parse --short HEAD)"

      - name: Setup Keystore
        run: |
          echo "${{ secrets.KEYSTORE }}" | base64 --decode > /tmp/keystore
          touch android/key.properties
          echo "storePassword=${{ secrets.KEYSTORE_PASS }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEYSTORE_PASS }}" >> android/key.properties
          echo "keyAlias=key" >> android/key.properties
          echo "storeFile=/tmp/keystore" >> android/key.properties

      - name: Cache Java/Gradle
        uses: actions/cache@v2
        with:
          path: ${{ env.gradle_path }}
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Flutter
        uses: actions/cache@v2
        with:
          path: ${{ env.flutter_path }}
          key: ${{ runner.os }}-flutter-${{ env.flutter_version }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-${{ env.flutter_version }}-
            ${{ runner.os }}-flutter-

      - name: Cache pub dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.FLUTTER_HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - uses: actions/setup-java@v1
        with:
          java-version: ${{ env.java_version }}

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ env.flutter_version }}

      - name: pub get
        run: flutter pub get

#      - name: Test
#        run: flutter test # Nah

      - name: Build
        run: flutter build apk  --build-number ${GITHUB_RUN_NUMBER} --dart-define=RELEASE_TAG=${{steps.slug.outputs.sha8}}

      - name: Upload Artifacts
        uses: actions/upload-artifact@master
        with:
          name: android-app
          path: build/app/outputs/flutter-apk

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{steps.slug.outputs.sha8}}
          release_name: Release ${{steps.slug.outputs.sha8}}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`.
          # See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/flutter-apk/app-release.apk
          asset_name: app-android.apk
          asset_content_type: application/zip
